define("local_deepler/deepler",["exports","core/ajax","./selectors","core/modal","core/str","./tokeniser"],(function(_exports,_ajax,_selectors,_modal,_str,_tokeniser){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * @module     local_deepler/deepler
   * @copyright  2022 Kaleb Heitzman <kaleb@jamfire.io>
   * @copyright  2024 Bruno Baudry <bruno.baudry@bfh.ch>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_selectors=_interopRequireDefault(_selectors),_modal=_interopRequireDefault(_modal);let tempTranslations={},mainEditorType="",config={},autotranslateButton={},checkboxes=[],sourceLang="",targetLang="",saveAllBtn={},usage={},format=new Intl.NumberFormat,saveAllModal={};const escapePatterns={};let log=function(){for(var _len=arguments.length,a=new Array(_len),_key=0;_key<_len;_key++)a[_key]=arguments[_key];return a},warn=function(){for(var _len2=arguments.length,a=new Array(_len2),_key2=0;_key2<_len2;_key2++)a[_key2]=arguments[_key2];return a},info=function(){for(var _len3=arguments.length,a=new Array(_len3),_key3=0;_key3<_len3;_key3++)a[_key3]=arguments[_key3];return a},error=function(){for(var _len4=arguments.length,a=new Array(_len4),_key4=0;_key4<_len4;_key4++)a[_key4]=arguments[_key4];return a};const debug_MINIMAL=5,debug_NORMAL=15,debug_ALL=30719,debug_DEVELOPER=32767;_exports.init=cfg=>{log("init"),config=cfg,usage=config.usage,config.debug===debug_MINIMAL?error=window.console.error.bind(window.console):config.debug===debug_NORMAL?(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console)):config.debug===debug_ALL?(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console),info=window.console.info.bind(window.console)):config.debug===debug_DEVELOPER&&(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console),info=window.console.info.bind(window.console),log=window.console.log.bind(window.console)),info("DEEPLER loaded"),log(config),warn("Deepl's usage",usage),error("testing developper level"),mainEditorType=config.userPrefs,(()=>{try{saveAllBtn=document.querySelector(_selectors.default.actions.saveAll),sourceLang=document.querySelector(_selectors.default.actions.sourceSwitcher).value,targetLang=document.querySelector(_selectors.default.actions.targetSwitcher).value,autotranslateButton=document.querySelector(_selectors.default.actions.autoTranslateBtn),checkboxes=document.querySelectorAll(_selectors.default.actions.checkBoxes),checkboxes.forEach((node=>{tempTranslations[node.dataset.key]={}}))}catch(e){config.debug&&error(e.message)}})(),document.addEventListener("change",(e=>{e.target.closest(_selectors.default.actions.targetSwitcher)&&switchTarget(e),e.target.closest(_selectors.default.actions.sourceSwitcher)&&switchSource(e),e.target.closest(_selectors.default.actions.showUpdated)&&showRows(_selectors.default.statuses.updated,e.target.checked),e.target.closest(_selectors.default.actions.showNeedUpdate)&&showRows(_selectors.default.statuses.needsupdate,e.target.checked),(e.target.closest(_selectors.default.actions.checkBoxes)||e.target.closest(_selectors.default.actions.sourceselect))&&onItemChecked(e)})),document.addEventListener("click",(e=>{if(e.target.closest(_selectors.default.actions.toggleMultilang)&&onToggleMultilang(e.target.closest(_selectors.default.actions.toggleMultilang)),e.target.closest(_selectors.default.actions.autoTranslateBtn)&&(config.currentlang===config.lang||void 0===config.lang?_modal.default.create({title:"Cannot call deepl",body:"<p>Both languges are the same {$config.lang}</p>",show:!0,removeOnClose:!0}):doAutotranslate()),e.target.closest(_selectors.default.actions.selectAllBtn)&&toggleAllCheckboxes(e),e.target.closest(_selectors.default.actions.saveAll)){const selected=document.querySelectorAll(_selectors.default.statuses.checkedCheckBoxes),allKeys=Array.from(selected).map((e=>e.dataset.key));log(allKeys),allKeys.length>0&&(launchModal(),saveAllBtn.hidden=saveAllBtn.disabled=!0,saveTranslations(allKeys))}})),toggleAutotranslateButton();document.querySelector(_selectors.default.actions.selectAllBtn).disabled=sourceLang===targetLang;document.querySelectorAll(_selectors.default.actions.validatorsBtns).forEach((item=>{item.addEventListener("click",(e=>{const key=e.target.closest(_selectors.default.actions.validatorsBtns).dataset.keyValidator;let currentStatus=document.querySelector(replaceKey(_selectors.default.actions.validatorBtn,key)).getAttribute("data-status");null===tempTranslations[key]||void 0===tempTranslations[key]?error(`Translation key "${key}" is undefined `):currentStatus===_selectors.default.statuses.tosave&&saveTranslation(key)}))})),checkboxes.forEach((e=>{e.disabled=sourceLang===targetLang,e.addEventListener("click",(()=>{toggleAutotranslateButton()}))})),showRows(_selectors.default.statuses.updated,document.querySelector(_selectors.default.actions.showUpdated).checked),showRows(_selectors.default.statuses.needsupdate,document.querySelector(_selectors.default.actions.showNeedUpdate).checked)};const showErrorMessageForEditor=(key,message)=>{let parent=document.querySelector(_selectors.default.editors.multiples.editorsWithKey.replace("<KEY>",key));const errorMsg=document.createElement("div");errorMsg.id="local_deepler__errormsg",errorMsg.classList=["alert alert-danger"],errorMsg.innerHTML=message,parent.appendChild(errorMsg)},hideErrorMessage=key=>{let parent=document.querySelector(_selectors.default.editors.multiples.editorsWithKey.replace("<KEY>",key)),alertChild=parent.querySelector(".alert-danger");alertChild&&parent.removeChild(alertChild)},launchModal=async()=>{saveAllModal=await _modal.default.create({title:(0,_str.get_string)("saveallmodaltitle","local_deepler"),body:(0,_str.get_string)("saveallmodalbody","local_deepler")}),await saveAllModal.show()},errorMessageItem=(key,editor,message)=>{editor.classList.add("local_deepler__error"),setIconStatus(key,_selectors.default.statuses.failed),showErrorMessageForEditor(key,message)},handleAjaxUpdateDBResponse=data=>{(0,_str.get_string)("errordbtitle","local_deepler").then((s=>{_modal.default.create({title:s,body:"yo",type:"ALERT",show:!0,removeOnClose:!0})})),data.forEach((item=>{if(null===item.keyid)(0,_str.get_string)("errordbtitle","local_deepler").then((s=>{_modal.default.create({title:s,body:item.error,type:"ALERT",show:!0,removeOnClose:!0})}));else{const key=keyidToKey(item.keyid),htmlElement=document.querySelector(replaceKey(_selectors.default.editors.multiples.editorsWithKey,key)),multilangTextarea=document.querySelector(replaceKey(_selectors.default.editors.multiples.textAreas,key));if(null!==item.error){const indexOfSET=item.error.indexOf("SET");indexOfSET>-1?(0,_str.get_string)("errortoolong","local_deepler").then((s=>{errorMessageItem(key,tempTranslations[key].editor,item.error.slice(0,indexOfSET)+"<br/>"+s)})):errorMessageItem(key,tempTranslations[key].editor,item.error)}else((key,element)=>{element.classList.add("local_deepler__success"),setIconStatus(key,_selectors.default.statuses.success),setTimeout((()=>{let multilangPill=document.querySelector(replaceKey(_selectors.default.statuses.multilang,key));document.querySelector(replaceKey(_selectors.default.statuses.prevTransStatus,key)).classList="badge badge-pill badge-success",multilangPill.classList.contains("disabled")&&multilangPill.classList.remove("disabled"),setIconStatus(key,_selectors.default.statuses.saved)}))})(key,htmlElement),multilangTextarea.innerHTML=item.text,document.querySelector(_selectors.default.editors.multiples.checkBoxesWithKey.replace("<KEY>",key)).checked=!1}}))},saveTranslations=keys=>{const data=[];keys.forEach((key=>{document.querySelector(replaceKey(_selectors.default.actions.validatorBtn,key)).getAttribute("data-status")===_selectors.default.statuses.tosave&&(hideErrorMessage(key),data.push(prepareDbUpdatdeItem(key)))})),_ajax.default.call([{methodname:"local_deepler_update_translation",args:{data:data},done:data=>{null!==saveAllModal&&saveAllModal.isVisible&&saveAllModal.hide(),data.length>0?handleAjaxUpdateDBResponse(data):keys.forEach((key=>{errorMessageItem(key,tempTranslations[key].editor,"Something went wrong with the data")}))},fail:err=>{keys.forEach((key=>{errorMessageItem(key,tempTranslations[key].editor,err.toString())}))}}])},saveTranslation=key=>{hideErrorMessage(key),_ajax.default.call([{methodname:"local_deepler_update_translation",args:{data:[prepareDbUpdatdeItem(key)]},done:data=>{data.length>0?handleAjaxUpdateDBResponse(data):errorMessageItem(key,tempTranslations[key].editor,"Something went wrong with the data")},fail:err=>{errorMessageItem(key,tempTranslations[key].editor,err.toString())}}])},prepareDbUpdatdeItem=key=>{const textTranslated=(editor=>{let text=editor.innerHTML;return"textarea"===mainEditorType&&(text=decodeHTML(text)),text})(tempTranslations[key].editor),sourceText=(key=>{const sourceTokenised=tempTranslations[key].source;return(0,_tokeniser.postprocess)(sourceTokenised,tempTranslations[key].tokens)})(key),fieldText=tempTranslations[key].fieldText,element=document.querySelector(replaceKey(_selectors.default.editors.multiples.editorsWithKey,key)),{id:id,tid:tid,field:field,table:table}=(element=>({id:parseInt(element.getAttribute("data-id")),tid:element.getAttribute("data-tid"),table:element.getAttribute("data-table"),field:element.getAttribute("data-field")}))(element),textTosave=getupdatedtext(fieldText,textTranslated,sourceText,tempTranslations[key].sourceLang);return{courseid:config.courseid,id:id,tid:tid,field:field,table:table,text:textTosave}},getupdatedtext=(fieldtext,translation,source,sourceItemLang)=>{const isFirstTranslation=-1===fieldtext.indexOf("{mlang"),isSourceOther=sourceItemLang===sourceLang,langsItems={fullContent:fieldtext,other:`{mlang other}${source}{mlang}`,target:`{mlang ${targetLang}}${translation}{mlang}`,source:`{mlang ${sourceItemLang}}${source}{mlang}`};return isFirstTranslation?isSourceOther?langsItems.other+langsItems.target:langsItems.other+langsItems.source+langsItems.target:additionalUpdate(isSourceOther,{other:"({mlang other)(.*?){mlang}",target:`({mlang ${targetLang}}(.*?){mlang})`,source:`({mlang ${sourceItemLang}}(.*?){mlang})`},langsItems)},additionalUpdate=(isSourceOther,tagPatterns,langsItems)=>{let manipulatedText=langsItems.fullContent;const targetReg=new RegExp(tagPatterns.target,"sg");if(manipulatedText.match(targetReg))manipulatedText=manipulatedText.replace(targetReg,(0,_tokeniser.escapeReplacementString)(langsItems.target));else{const lastMlangClosingTagEnd=manipulatedText.lastIndexOf("{mlang}")+"{mlang}".length;manipulatedText=[manipulatedText.slice(0,lastMlangClosingTagEnd),langsItems.target,manipulatedText.slice(lastMlangClosingTagEnd)].join("")}const otherReg=new RegExp(tagPatterns.other,"sg"),hasTagOther=manipulatedText.match(otherReg),sourceReg=new RegExp(tagPatterns.other,"sg"),hasTagSource=manipulatedText.match(sourceReg);if(isSourceOther)manipulatedText=manipulatedText.replace(otherReg,(0,_tokeniser.escapeReplacementString)(langsItems.other)),hasTagSource&&manipulatedText.replace(sourceReg,"");else{if(!hasTagOther){const firstMlangClosingTagEnd=manipulatedText.indexOf("{mlang");manipulatedText=[manipulatedText.slice(0,firstMlangClosingTagEnd),langsItems.other,manipulatedText.slice(firstMlangClosingTagEnd)].join("")}hasTagSource||manipulatedText.replace(sourceReg,(0,_tokeniser.escapeReplacementString)(langsItems.source))}return manipulatedText},onItemChecked=e=>{log("SELECTION",e.target.getAttribute("data-key"),e.target.getAttribute("data-action"));const key=e.target.getAttribute("data-key");"local_deepler/checkbox"===e.target.getAttribute("data-action")?(toggleStatus(key,e.target.checked),countWordAndChar()):initTempForKey(key,!1)},initTempForKey=(key,blank)=>{const sourceSelector=_selectors.default.sourcetexts.keys.replace("<KEY>",key),sourceTextEncoded=document.querySelector(sourceSelector).getAttribute("data-sourcetext-raw"),multilangRawTextEncoded=document.querySelector(sourceSelector).getAttribute("data-filedtext-raw"),sourceText=fromBase64(sourceTextEncoded),fieldText=fromBase64(multilangRawTextEncoded),tokenised=(0,_tokeniser.preprocess)(sourceText,escapePatterns,escapePatterns),editorSettings=findEditor(key),sourceLang=document.querySelector(_selectors.default.sourcetexts.sourcelangs.replace("<KEY>",key)).value;tempTranslations[key]={editorType:null,editor:null,source:"",sourceLang:"",fieldText:"",status:"",translation:"",tokens:[]},blank||(null===editorSettings||null===editorSettings.editor?(setIconStatus(key,_selectors.default.statuses.failed),showErrorMessageForEditor(key,"Original editor not found...")):tempTranslations[key]={editorType:editorSettings.editorType,editor:editorSettings.editor,source:tokenised.tokenizedText,sourceLang:sourceLang,fieldText:fieldText,status:_selectors.default.statuses.wait,translation:"",tokens:tokenised.expressions})},toggleStatus=(key,checked)=>{var _tempTranslations$key,_tempTranslations$key2;switch(document.querySelector(replaceKey(_selectors.default.actions.validatorBtn,key)).dataset.status){case _selectors.default.statuses.wait:checked?(setIconStatus(key,_selectors.default.statuses.totranslate),initTempForKey(key,!1)):initTempForKey(key,!0);break;case _selectors.default.statuses.totranslate:checked&&(null===(_tempTranslations$key=tempTranslations[key])||void 0===_tempTranslations$key||null===(_tempTranslations$key2=_tempTranslations$key.translation)||void 0===_tempTranslations$key2?void 0:_tempTranslations$key2.length)>0?setIconStatus(key,_selectors.default.statuses.tosave,!0):setIconStatus(key,_selectors.default.statuses.wait);break;case _selectors.default.statuses.tosave:checked||setIconStatus(key,_selectors.default.statuses.totranslate);case _selectors.default.statuses.failed:case _selectors.default.statuses.success:case _selectors.default.statuses.saved:}},setIconStatus=function(key){let status=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_selectors.default.statuses.wait,isBtn=arguments.length>2&&void 0!==arguments[2]&&arguments[2],icon=document.querySelector(replaceKey(_selectors.default.actions.validatorBtn,key));isBtn?(icon.classList.contains("btn")||(icon.classList.add("btn"),icon.classList.add("btn-outline-secondary")),icon.classList.contains("disable")&&icon.classList.remove("disable")):(icon.classList.contains("disable")||icon.classList.add("disable"),icon.classList.contains("btn")&&(icon.classList.remove("btn"),icon.classList.remove("btn-outline-secondary"))),icon.setAttribute("role",isBtn?"button":"status"),icon.setAttribute("data-status",status)},showRows=(selector,selected)=>{const items=document.querySelectorAll(selector),allSelected=document.querySelector(_selectors.default.actions.selectAllBtn).checked;items.forEach((item=>{let k=item.getAttribute("data-row-id");toggleRowVisibility(item,selected);try{item.querySelector(replaceKey(_selectors.default.editors.multiples.checkBoxesWithKey,k)).checked=allSelected&&selected,toggleStatus(k,!1)}catch(e){log(`${k} translation is disalbled`)}})),toggleAutotranslateButton(),countWordAndChar()},toggleRowVisibility=(row,checked)=>{checked?row.classList.remove("d-none"):row.classList.add("d-none")},switchTarget=e=>{let url=new URL(window.location.href);url.searchParams.set("target_lang",e.target.value),window.location=url.toString()},switchSource=e=>{let url=new URL(window.location.href);url.searchParams.set("lang",e.target.value),window.location=url.toString()},doAutotranslate=()=>{saveAllBtn.hidden=saveAllBtn.disabled=!1,document.querySelectorAll(_selectors.default.statuses.checkedCheckBoxes).forEach((ckBox=>{let key=ckBox.getAttribute("data-key");null!==tempTranslations[key].editor&&getTranslation(key)}))},prepareAdvancedSettings=()=>{info("prepareAdvancedSettings");let settings={};return escapePatterns.LATEX=document.querySelector(_selectors.default.actions.escapeLatex).checked,escapePatterns.PRETAG=document.querySelector(_selectors.default.actions.escapePre).checked,settings.tag_handling=document.querySelector(_selectors.default.deepl.tagHandling).checked?"html":"xml",settings.context=document.querySelector(_selectors.default.deepl.context).value??null,settings.split_sentences=document.querySelector(_selectors.default.deepl.splitSentences).value,settings.preserve_formatting=document.querySelector(_selectors.default.deepl.preserveFormatting).checked,settings.formality=document.querySelector('[name="local_deepler/formality"]:checked').value,settings.glossary_id=document.querySelector(_selectors.default.deepl.glossaryId).value,settings.outline_detection=document.querySelector(_selectors.default.deepl.outlineDetection).checked,settings.non_splitting_tags=toJsonArray(document.querySelector(_selectors.default.deepl.nonSplittingTags).value),settings.splitting_tags=toJsonArray(document.querySelector(_selectors.default.deepl.splittingTags).value),settings.ignore_tags=toJsonArray(document.querySelector(_selectors.default.deepl.ignoreTags).value),settings.target_lang=targetLang.toUpperCase(),settings.auth_key=config.apikey,settings},prepareTranslation=key=>({text:tempTranslations[key].source,source_lang:tempTranslations[key].sourceLang}),getTranslation=key=>{const readystateDone=XMLHttpRequest.DONE??4;tempTranslations[key].staus=_selectors.default.statuses.wait;let formData=function(key){let formData=arguments.length>1&&void 0!==arguments[1]&&!arguments[1]?new FormData:new URLSearchParams;return Object.entries(prepareAdvancedSettings()).forEach((_ref=>{let[k,v]=_ref;formData.append(k,v)})),initTempForKey(key,!1),Object.entries(prepareTranslation(key)).forEach((_ref2=>{let[k,v]=_ref2;formData.append(k,v)})),formData}(key);if(null===tempTranslations[key].editor)error(`${key} no editor found :((`);else{info("Send deepl:",formData);let xhr=new XMLHttpRequest;xhr.responseType="json",xhr.onreadystatechange=()=>{if(xhr.readyState===readystateDone){const status=xhr.status;if(0===status||status>=200&&status<400){log(tempTranslations);let data="text"===xhr.responseType||""===xhr.responseType?JSON.parse(xhr.responseText):xhr.response;info("From deepl:",data);let tr=(0,_tokeniser.postprocess)(data.translations[0].text,tempTranslations[key].tokens,escapePatterns);log(tr),tempTranslations[key].editor.innerHTML=tr,tempTranslations[key].translation=tr,setIconStatus(key,_selectors.default.statuses.tosave,!0),injectImageCss(tempTranslations[key].editorType,tempTranslations[key].editor)}else setIconStatus(key,_selectors.default.statuses.failed,!1)}else"number"!=typeof xhr.readyState&&log('ERROR: Some JS library in your Moodle install are overriding the core functionalities in a wrong way.xhr.readyState MUST be of type "number"')},xhr.open("POST",config.deeplurl),xhr.send(formData)}},injectImageCss=(editorType,editor)=>{const css=document.createElement("style");if(css.textContent="img{background-color:yellow !important;font-style: italic;}","iframe"===editorType){let editorschildrens=Array.from(editor.parentElement.children),found=!1;for(let j in editorschildrens){if(editorschildrens[j].innerText===css.innerText){found=!0;break}}found||editor.parentElement.appendChild(css)}},findEditor=key=>{let e=document.querySelector(_selectors.default.editors.types.basic.replace("<KEY>",key));if(null===e){let r=null;if(-1===["atto","tiny","marklar","textarea"].indexOf(mainEditorType))warn("Unsupported editor "+mainEditorType);else try{r=findEditorByType(key,mainEditorType)}catch(error){log(`Editor not found: ${mainEditorType} for key ${key}`)}return r}return{editor:e,editorType:"basic"}},findEditorByType=(key,editorType)=>{let et="basic",ed=null;switch(editorType){case"atto":et="iframe",ed=document.querySelector(_selectors.default.editors.types.atto.replaceAll("<KEY>",key));break;case"tiny":et="iframe",ed=document.querySelector(_selectors.default.editors.types.tiny.replaceAll("<KEY>",key)).contentWindow.tinymce;break;case"marklar":case"textarea":ed=document.querySelector(_selectors.default.editors.types.other.replaceAll("<KEY>",key))}return{editor:ed,editorType:et}},toggleAllCheckboxes=e=>{e.target.checked?checkboxes.forEach((i=>{i.checked=!getParentRow(i).classList.contains("d-none"),toggleStatus(i.getAttribute("data-key"),i.checked)})):checkboxes.forEach((i=>{i.checked=!1,toggleStatus(i.getAttribute("data-key"),!1)})),toggleAutotranslateButton(),countWordAndChar()},getParentRow=node=>node.closest(replaceKey(_selectors.default.sourcetexts.parentrow,node.getAttribute("data-key"))),toggleAutotranslateButton=()=>{autotranslateButton.disabled=!0;for(let i in checkboxes){if(checkboxes[i].checked){autotranslateButton.disabled=!1;break}}},onToggleMultilang=e=>{let keyid=e.getAttribute("aria-controls"),key=keyidToKey(keyid),source=document.querySelector(replaceKey(_selectors.default.sourcetexts.keys,key)),multilang=document.querySelector(replaceKey(_selectors.default.sourcetexts.multilangs,keyid));source.classList.toggle("show"),multilang.classList.toggle("show")},toJsonArray=function(s){let sep=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return JSON.stringify(s.split(sep))},replaceKey=(s,k)=>s.replace("<KEY>",k),keyidToKey=k=>{let m=k.match(/^(.+)-(.+)-(.+)$/i);return`${m[1]}[${m[2]}][${m[3]}]`},countWordAndChar=()=>{let wrdsc=0,cws=0,cwos=0;document.querySelectorAll(_selectors.default.statuses.checkedCheckBoxes).forEach((ckBox=>{let key=ckBox.getAttribute("data-key"),results=getCount(key);wrdsc+=results.wordCount,cwos+=results.charNumWithOutSpace,cws+=results.charNumWithSpace}));const wordCount=document.querySelector(_selectors.default.statuses.wordcount),charWithSpace=document.querySelector(_selectors.default.statuses.charNumWithSpace),charWOSpace=document.querySelector(_selectors.default.statuses.charNumWithOutSpace),deeplUseSpan=document.querySelector(_selectors.default.statuses.deeplUsage),deeplMaxSpan=document.querySelector(_selectors.default.statuses.deeplMax),parent=document.querySelector(_selectors.default.statuses.deeplStatusContainer);let current=cwos+usage.character.count;wordCount.innerText=wrdsc,charWithSpace.innerText=cws,charWOSpace.innerText=cwos,deeplUseSpan.innerText=format.format(current),deeplMaxSpan.innerText=null===usage.character.limit?"∞":format.format(usage.character.limit),current>=usage.character.limit?(parent.classList.remove("alert-success"),parent.classList.add("alert-danger")):(parent.classList.add("alert-success"),parent.classList.remove("alert-danger"))},getCount=key=>{const raw=document.querySelector(replaceKey(_selectors.default.sourcetexts.keys,key)).getAttribute("data-sourcetext-raw"),trimmedVal=stripHTMLTags(fromBase64(raw)).trim();return{wordCount:(trimmedVal.match(/\S+/g)||[]).length,charNumWithSpace:trimmedVal.length,charNumWithOutSpace:trimmedVal.replace(/\s+/g,"").length}},fromBase64=encoded=>{const binString=atob(encoded),bytes=Uint8Array.from(binString,(m=>m.codePointAt(0)));return(new TextDecoder).decode(bytes)},decodeHTML=encodedStr=>(new DOMParser).parseFromString(encodedStr,"text/html").documentElement.textContent,stripHTMLTags=str=>(new DOMParser).parseFromString(str,"text/html").body.textContent||""}));

//# sourceMappingURL=deepler.min.js.map