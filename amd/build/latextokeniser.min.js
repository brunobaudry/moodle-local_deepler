define("local_deepler/latextokeniser",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.escapeReplacementString=escapeReplacementString,_exports.postprocess=function(text,expressions){return expressions.forEach(((expr,i)=>{patterns.forEach((p=>{const token=new RegExp(`__${p.type}_${i}__`,"g");text=text.replace(token,escapeReplacementString(expr))}))})),text},_exports.preprocess=function(text){const expressions=[];let tokenizedText=text;return patterns.forEach((pattern=>{tokenizedText=tokenizedText.replace(pattern.regex,(match=>{const token=`__${pattern.type}_${expressions.length}__`;return expressions.push(match),token}))})),{tokenizedText:tokenizedText,expressions:expressions}};
/*
   * @module     local_deepler/deepler
   * @copyright  2024 Bruno Baudry <bruno.baudry@bfh.ch>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const patterns=[{regex:/<pre\b[^>]*>(.*?)<\/pre>/gs,type:"PRETAG"},{regex:/\$\$.*?\$\$/g,type:"LATEX"}];function escapeReplacementString(str){return str.replace(/\$/g,"$$$$")}}));

//# sourceMappingURL=latextokeniser.min.js.map