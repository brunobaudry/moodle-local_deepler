/**
 * @module     local_deepler/deepler
 * @file       amd/src/local/utils.js
 * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_deepler/local/utils",[],(()=>({COOKIE_PREFIX:"moodle_deepler_glossary_",getCookie:name=>{const nameEQ=name+"=",ca=document.cookie.split(";");for(let i=0;i<ca.length;i++){let c=ca[i];for(;" "==c.charAt(0);)c=c.substring(1,c.length);if(0==c.indexOf(nameEQ))return c.substring(nameEQ.length,c.length)}return null},setCookie:(name,value,hours)=>{var expires="";if(hours){var date=new Date;date.setTime(date.getTime()+60*hours*60*1e3),expires="; expires="+date.toUTCString()}document.cookie=name+"="+(value||"")+expires+"; path=/"},replaceKey:(s,k)=>s.replace("<KEY>",k),keyidToKey:k=>{let m=k.match(/^(.+)-(.+)-(.+)-(.+)$/i);return"".concat(m[1],"[").concat(m[2],"][").concat(m[3],"][").concat(m[4],"]")},decodeHTML:encodedStr=>(new DOMParser).parseFromString(encodedStr,"text/html").documentElement.textContent,stripHTMLTags:str=>(new DOMParser).parseFromString(str,"text/html").body.textContent||"",fromBase64:encoded=>{const binString=atob(encoded),bytes=Uint8Array.from(binString,(m=>m.codePointAt(0)));return(new TextDecoder).decode(bytes)},toJsonArray:function(s){let sep=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return JSON.stringify(s.split(sep))}})));

//# sourceMappingURL=utils.min.js.map