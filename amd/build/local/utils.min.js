/**
 * @module     local_deepler/deepler
 * @file       amd/src/local/utils.js
 * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_deepler/local/utils",[],(()=>{const setCookie=(name,value,hours)=>{let expires="";if(hours){const date=new Date;date.setTime(date.getTime()+60*hours*60*1e3),expires="; expires="+date.toUTCString()}document.cookie=name+"="+(value||"")+expires+"; path=/"},getCookie=name=>{const nameEQ=name+"=",ca=document.cookie.split(";");for(let i=0;i<ca.length;i++){let c=ca[i];for(;" "==c.charAt(0);)c=c.substring(1,c.length);if(0==c.indexOf(nameEQ))return c.substring(nameEQ.length,c.length)}return null};return{COOKIE_PREFIX:"moodle_deepler_glossary_",COOKIE_PREFIX_NEW:"moodle_deepler_settings_",getCookie:getCookie,getEncodedCookie:name=>{const cook=getCookie(name);return null===cook?null:atob(cook)},setCookie:setCookie,setEncodedCookie:(name,value,hours)=>{setCookie(name,btoa(value),hours)},replaceKey:(s,k)=>s.replace("<KEY>",k),keyidToKey:k=>{if("string"!=typeof k||k.length>256)return null;let m=k.match(/^([^-]+)-([^-]+)-([^-]+)-([^-]+)$/i);return m?"".concat(m[1],"[").concat(m[2],"][").concat(m[3],"][").concat(m[4],"]"):null},decodeHTML:encodedStr=>(new DOMParser).parseFromString(encodedStr,"text/html").documentElement.textContent,stripHTMLTags:str=>(new DOMParser).parseFromString(str,"text/html").body.textContent||"",fromBase64:encoded=>{const binString=atob(encoded),bytes=Uint8Array.from(binString,(m=>m.codePointAt(0)));return(new TextDecoder).decode(bytes)},toJsonArray:function(s){let sep=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return JSON.stringify(s.split(sep))}}}));

//# sourceMappingURL=utils.min.js.map