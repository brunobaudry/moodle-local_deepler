{"version":3,"file":"api.min.js","sources":["../../src/local/api.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     local_deepler/deepler\n * @file       amd/src/local/api.js\n * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/log', 'core/ajax', './utils', './customevents'], (Log, Ajax, Utils, Events) => {\n    const TR_DB_SUCCESS = 'onDbUpdateSuccess';\n    const TR_DB_FAILED = 'onDbUpdateFailed';\n    const DEEPL_SUCCESS = 'onDeeplTrSuccess';\n    const DEEPL_RF_SUCCESS = 'onDeeplRfSuccess';\n    const DEEPL_FAILED = 'onDeeplTrFailed';\n    const DEEPL_RF_FAILED = 'onDeeplRfFailed';\n    let APP_VERSION = '';\n    /**\n     *\n     * @param {object} data\n     * @param {int} userid\n     * @param {int} courseid\n     */\n    const updateTranslationsInDb = (data, userid, courseid) => {\n        Ajax.call([\n            {\n                methodname: \"local_deepler_update_translation\",\n                args: {\n                    data: data,\n                    userid: userid,\n                    courseid: courseid,\n                    action: 'update'\n                },\n                done: (response) => {\n                    if (response.length === 1 && response[0].error && response[0].keyid === '') {\n                        Log.warn(`api/updateTranslationsInDb/done::response has errors`);\n                        Events.emit(TR_DB_FAILED, response[0].error);\n                        return;\n                    }\n                    Events.emit(TR_DB_SUCCESS, response);\n                },\n                fail: (jqXHR, status, error) => {\n                    Log.error(`api/updateTranslationsInDb/fail::jqXHR`);\n                    Log.error(jqXHR);\n                     Events.emit(TR_DB_FAILED, error ?? jqXHR.debuginfo ?? jqXHR.message ?? jqXHR.errorcode ?? status);\n                }\n            }]\n        );\n    };\n    /**\n     * Parent DeepL external service caller.\n     *\n     * @param {object} args\n     * @param {string} endPoint\n     * @param {string} successEvent\n     * @param {string} failedEvent\n     */\n    const deeplService = (args, endPoint, successEvent, failedEvent)=>{\n        Ajax.call([{\n            methodname: endPoint,\n            args: args,\n            done: (response) => {\n                Events.emit(successEvent, response);\n            },\n            fail: (jqXHR, status, error) => {\n                Log.debug(`${endPoint} api/translate/fail::jqXHR`);\n                Log.debug(jqXHR);\n                Events.emit(failedEvent, status ?? '', error ?? jqXHR.debuginfo ?? jqXHR.message ?? jqXHR.errorcode);\n            }\n        }]);\n    };\n    /**\n     * Calls Deepl's translation.\n     * @param {object} data\n     * @param {object} options\n     * @param {string} version\n     */\n    const translate = (data, options, version) => {\n        const args = {\n            translations: data, // Array of text, keys, source_lang\n            options: options, // Object with DeepL's settings options including target_lang.\n            version: version\n        };\n        deeplService(args, 'local_deepler_get_translation', DEEPL_SUCCESS, DEEPL_FAILED);\n    };\n    /**\n     * Calls Deepl's rephrase.\n     * @param {object} data\n     * @param {object} options\n     * @param {string} version\n     */\n    const rephrase = (data, options, version) => {\n        const args = {\n            rephrasings: data, // Array of text, keys, source_lang\n            options: options, // Object with DeepL's settings options including target_lang.\n            version: version\n        };\n        deeplService(args, 'local_deepler_get_rephrase', DEEPL_RF_SUCCESS, DEEPL_RF_FAILED);\n    };\n    /**\n     * Api to be used by the other modules.\n     */\n    return {\n        APP_VERSION: APP_VERSION,\n        TR_DB_SUCCESS: TR_DB_SUCCESS,\n        TR_DB_FAILED: TR_DB_FAILED,\n        DEEPL_SUCCESS: DEEPL_SUCCESS,\n        DEEPL_RF_SUCCESS: DEEPL_RF_SUCCESS,\n        DEEPL_FAILED: DEEPL_FAILED,\n        DEEPL_RF_FAILED: DEEPL_RF_FAILED,\n        updateTranslationsInDb: updateTranslationsInDb,\n        translate: translate,\n        rephrase: rephrase\n    };\n});\n"],"names":["define","Log","Ajax","Utils","Events","deeplService","args","endPoint","successEvent","failedEvent","call","methodname","done","response","emit","fail","jqXHR","status","error","debug","debuginfo","message","errorcode","APP_VERSION","TR_DB_SUCCESS","TR_DB_FAILED","DEEPL_SUCCESS","DEEPL_RF_SUCCESS","DEEPL_FAILED","DEEPL_RF_FAILED","updateTranslationsInDb","data","userid","courseid","action","length","keyid","warn","translate","options","version","translations","rephrase","rephrasings"],"mappings":";;;;;;AAqBAA,iCAAO,CAAC,WAAY,YAAa,UAAW,mBAAmB,CAACC,IAAKC,KAAMC,MAAOC,gBAgDxEC,aAAe,CAACC,KAAMC,SAAUC,aAAcC,eAChDP,KAAKQ,KAAK,CAAC,CACPC,WAAYJ,SACZD,KAAMA,KACNM,KAAOC,WACHT,OAAOU,KAAKN,aAAcK,WAE9BE,KAAM,CAACC,MAAOC,OAAQC,yBAClBjB,IAAIkB,gBAASZ,wCACbN,IAAIkB,MAAMH,OACVZ,OAAOU,KAAKL,YAAaQ,MAAAA,OAAAA,OAAU,+BAAIC,MAAAA,MAAAA,MAASF,MAAMI,iCAAaJ,MAAMK,+BAAWL,MAAMM,sBAmC/F,CACHC,YAvFc,GAwFdC,cA9FkB,oBA+FlBC,aA9FiB,mBA+FjBC,cA9FkB,mBA+FlBC,iBA9FqB,mBA+FrBC,aA9FiB,kBA+FjBC,gBA9FoB,kBA+FpBC,uBAvF2B,CAACC,KAAMC,OAAQC,YAC1C/B,KAAKQ,KAAK,CACN,CACIC,WAAY,mCACZL,KAAM,CACFyB,KAAMA,KACNC,OAAQA,OACRC,SAAUA,SACVC,OAAQ,UAEZtB,KAAOC,cACqB,IAApBA,SAASsB,QAAgBtB,SAAS,GAAGK,OAA+B,KAAtBL,SAAS,GAAGuB,aAC1DnC,IAAIoC,kEACJjC,OAAOU,KAzBN,mBAyByBD,SAAS,GAAGK,OAG1Cd,OAAOU,KA7BD,oBA6BqBD,WAE/BE,KAAM,CAACC,MAAOC,OAAQC,8BAClBjB,IAAIiB,gDACJjB,IAAIiB,MAAMF,OACTZ,OAAOU,KAjCH,4DAiCsBI,MAAAA,MAAAA,MAASF,MAAMI,iCAAaJ,MAAMK,+BAAWL,MAAMM,+BAAaL,aAmEvGqB,UAlCc,CAACP,KAAMQ,QAASC,WAM9BnC,aALa,CACToC,aAAcV,KACdQ,QAASA,QACTC,QAASA,SAEM,gCAvED,mBAED,oBAkGjBE,SArBa,CAACX,KAAMQ,QAASC,WAM7BnC,aALa,CACTsC,YAAaZ,KACbQ,QAASA,QACTC,QAASA,SAEM,6BApFE,mBAED"}