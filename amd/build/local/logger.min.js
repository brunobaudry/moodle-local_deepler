/**
 * Yes it is a bit stupid to have another logger.
 * But core/log is not really usable.
 *
 * @module     local_deepler/deepler
 * @file       amd/src/local/translation.js
 * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_deepler/local/logger",[],(()=>{let level=-1,log=function(){for(var _len=arguments.length,a=new Array(_len),_key=0;_key<_len;_key++)a[_key]=arguments[_key];return a},warn=function(){for(var _len2=arguments.length,a=new Array(_len2),_key2=0;_key2<_len2;_key2++)a[_key2]=arguments[_key2];return a},info=function(){for(var _len3=arguments.length,a=new Array(_len3),_key3=0;_key3<_len3;_key3++)a[_key3]=arguments[_key3];return a},error=function(){for(var _len4=arguments.length,a=new Array(_len4),_key4=0;_key4<_len4;_key4++)a[_key4]=arguments[_key4];return a};const debug_MINIMAL=5,debug_NORMAL=15,debug_ALL=30719,debug_DEVELOPER=32767;return{init:configlevel=>{level=configlevel,level===debug_MINIMAL?error=window.console.error.bind(window.console):level===debug_NORMAL?(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console)):level===debug_ALL?(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console),info=window.console.info.bind(window.console)):level===debug_DEVELOPER&&(error=window.console.error.bind(window.console),warn=window.console.warn.bind(window.console),info=window.console.info.bind(window.console),log=window.console.log.bind(window.console),log("Logger initialized"))},log:log,warn:warn,info:info,error:error}}));

//# sourceMappingURL=logger.min.js.map