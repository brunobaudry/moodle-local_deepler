{"version":3,"file":"logger.min.js","sources":["../../src/local/logger.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * Yes it is a bit stupid to have another logger.\n * But core/log is not really usable.\n *\n * @module     local_deepler/deepler\n * @file       amd/src/local/translation.js\n * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], ()=>{\n    let level = -1;\n    let log = (...a) => {\n        return a;\n    };\n    let warn = (...a) => {\n        return a;\n    };\n    let info = (...a) => {\n        return a;\n    };\n    let error = (...a) => {\n        return a;\n    };\n    const debug = {\n        NONE: 0, // Level 5 silent.\n        MINIMAL: 5, // Level 3 no trace, debug or info.\n        NORMAL: 15, // Level 2 no trace or debug.\n        ALL: 30719, // Level 1 no trace.\n        DEVELOPER: 32767 // Level 0 all.\n    };\n    const init = (configlevel) => {\n        level = configlevel;\n        if (level === debug.MINIMAL) {\n            error = window.console.error.bind(window.console);\n        } else if (level === debug.NORMAL) {\n            error = window.console.error.bind(window.console);\n            warn = window.console.warn.bind(window.console);\n        } else if (level === debug.ALL) {\n            error = window.console.error.bind(window.console);\n            warn = window.console.warn.bind(window.console);\n            info = window.console.info.bind(window.console);\n        } else if (level === debug.DEVELOPER) {\n            error = window.console.error.bind(window.console);\n            warn = window.console.warn.bind(window.console);\n            info = window.console.info.bind(window.console);\n            log = window.console.log.bind(window.console);\n            log('Logger initialized');\n        }\n    };\n    // Preparing the debugger.\n    return {\n        init: init,\n        log: log,\n        warn: warn,\n        info: info,\n        error: error\n    };\n});\n"],"names":["define","level","log","a","warn","info","error","debug","init","configlevel","window","console","bind"],"mappings":";;;;;;;;;AA0BAA,oCAAO,IAAI,SACHC,OAAS,EACTC,IAAM,yCAAIC,0CAAAA,+BACHA,GAEPC,KAAO,0CAAID,+CAAAA,iCACJA,GAEPE,KAAO,0CAAIF,+CAAAA,iCACJA,GAEPG,MAAQ,0CAAIH,+CAAAA,iCACLA,SAELI,cAEO,EAFPA,aAGM,GAHNA,UAIG,MAJHA,gBAKS,YAsBR,CACHC,KArBUC,cACVR,MAAQQ,YACJR,QAAUM,cACVD,MAAQI,OAAOC,QAAQL,MAAMM,KAAKF,OAAOC,SAClCV,QAAUM,cACjBD,MAAQI,OAAOC,QAAQL,MAAMM,KAAKF,OAAOC,SACzCP,KAAOM,OAAOC,QAAQP,KAAKQ,KAAKF,OAAOC,UAChCV,QAAUM,WACjBD,MAAQI,OAAOC,QAAQL,MAAMM,KAAKF,OAAOC,SACzCP,KAAOM,OAAOC,QAAQP,KAAKQ,KAAKF,OAAOC,SACvCN,KAAOK,OAAOC,QAAQN,KAAKO,KAAKF,OAAOC,UAChCV,QAAUM,kBACjBD,MAAQI,OAAOC,QAAQL,MAAMM,KAAKF,OAAOC,SACzCP,KAAOM,OAAOC,QAAQP,KAAKQ,KAAKF,OAAOC,SACvCN,KAAOK,OAAOC,QAAQN,KAAKO,KAAKF,OAAOC,SACvCT,IAAMQ,OAAOC,QAAQT,IAAIU,KAAKF,OAAOC,SACrCT,IAAI,wBAMRA,IAAKA,IACLE,KAAMA,KACNC,KAAMA,KACNC,MAAOA"}