{"version":3,"file":"utils.min.js","sources":["../../src/local/utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     local_deepler/deepler\n * @file       amd/src/local/utils.js\n * @copyright  2025 Bruno Baudry <bruno.baudry@bfh.ch>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([], () => {\n    const debug = {\n        NONE: 0,\n        MINIMAL: 5,\n        NORMAL: 15,\n        ALL: 30719,\n        DEVELOPER: 32767\n    };\n    let log = (...a) => {\n        return a;\n    };\n    let warn = (...a) => {\n        return a;\n    };\n    let info = (...a) => {\n        return a;\n    };\n    let error = (...a) => {\n        return a;\n    };\n\n\n    /**\n     * Register loggers based on the debug configuration.\n     *\n     * @param {int} debugConfig\n     */\n    const registerLoggers = (debugConfig)=> {\n\n        // Preparing the debugger.\n        error = window.console.error.bind(window.console);\n        if (debugConfig === debug.NORMAL) {\n            error = window.console.error.bind(window.console);\n            warn = window.console.warn.bind(window.console);\n        } else if (debugConfig === debug.ALL) {\n            error = window.console.error.bind(window.console);\n            warn = window.console.warn.bind(window.console);\n            info = window.console.info.bind(window.console);\n        } else if (debugConfig === debug.DEVELOPER) {\n            window.console.log(`Moodle debug level ${debugConfig}`, debugConfig === debug.DEVELOPER);\n            warn = window.console.warn.bind(window.console);\n            info = window.console.info.bind(window.console);\n            log = window.console.log.bind(window.console);\n            window.console.log(`Moodle debug level ${debugConfig}`, debugConfig === debug.DEVELOPER);\n            log(`Moodle debug level ${debugConfig}`, debugConfig === debug.DEVELOPER);\n        }\n    };\n    /**\n     * Simple helper to manage selectors\n     * @param {string} s\n     * @param {string} k\n     * @returns {*}\n     */\n    const replaceKey = (s, k) => {\n        return s.replace(\"<KEY>\", k);\n    };\n    /**\n     * Transforms a keyid to a key.\n     * @param {string} k\n     * @returns {`${*}[${*}][${*}]`}\n     */\n    const keyidToKey = (k) => {\n        let m = k.match(/^(.+)-(.+)-(.+)$/i);\n        return `${m[1]}[${m[2]}][${m[3]}]`;\n    };\n    /**\n     * Json helper\n     * @param {string} s\n     * @param {string} sep\n     * @returns {string}\n     * utils.js\n     */\n    const toJsonArray = (s, sep = \",\") => {\n        return JSON.stringify(s.split(sep));\n    };\n    /**\n     * Helper function to decode the PHP base64 encoded source.\n     * @param {string} encoded\n     * @returns {string}\n     */\n    const fromBase64 = (encoded) => {\n        const binString = atob(encoded); // Maybe we should import js-base64 instead.\n        const bytes = Uint8Array.from(binString, (m) => m.codePointAt(0));\n        return new TextDecoder().decode(bytes);\n    };\n    /**\n     * Helper function for the decode html escaped content.\n     * @param {string} encodedStr\n     * @returns {string}\n\n     */\n    const decodeHTML = (encodedStr) => {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(encodedStr, 'text/html');\n            return doc.documentElement.textContent;\n        };\n    /**\n     * Helper to remove HTML from strings.\n     *\n     * @param {string} str\n     * @returns {string|string}\n     * utils.js\n     */\n    const stripHTMLTags = (str) => {\n        let doc = new DOMParser().parseFromString(str, 'text/html');\n        return doc.body.textContent || \"\";\n    };\n    /**\n     * Api to be used by the other modules.\n     */\n    return {\n        registerLoggers: registerLoggers,\n        info: info,\n        error: error,\n        warn: warn,\n        log: log,\n        replaceKey: replaceKey,\n        keyidToKey: keyidToKey,\n        decodeHTML: decodeHTML,\n        stripHTMLTags: stripHTMLTags,\n        fromBase64: fromBase64,\n        toJsonArray: toJsonArray\n    };\n});\n"],"names":["define","debug","log","a","warn","info","error","registerLoggers","debugConfig","window","console","bind","replaceKey","s","k","replace","keyidToKey","m","match","decodeHTML","encodedStr","DOMParser","parseFromString","documentElement","textContent","stripHTMLTags","str","body","fromBase64","encoded","binString","atob","bytes","Uint8Array","from","codePointAt","TextDecoder","decode","toJsonArray","sep","JSON","stringify","split"],"mappings":";;;;;;AAqBAA,mCAAO,IAAI,WACDC,aAGM,GAHNA,UAIG,MAJHA,gBAKS,UAEXC,IAAM,yCAAIC,0CAAAA,+BACHA,GAEPC,KAAO,0CAAID,+CAAAA,iCACJA,GAEPE,KAAO,0CAAIF,+CAAAA,iCACJA,GAEPG,MAAQ,0CAAIH,+CAAAA,iCACLA,SA4FJ,CACHI,gBApFqBC,cAGrBF,MAAQG,OAAOC,QAAQJ,MAAMK,KAAKF,OAAOC,SACrCF,cAAgBP,cAChBK,MAAQG,OAAOC,QAAQJ,MAAMK,KAAKF,OAAOC,SACzCN,KAAOK,OAAOC,QAAQN,KAAKO,KAAKF,OAAOC,UAChCF,cAAgBP,WACvBK,MAAQG,OAAOC,QAAQJ,MAAMK,KAAKF,OAAOC,SACzCN,KAAOK,OAAOC,QAAQN,KAAKO,KAAKF,OAAOC,SACvCL,KAAOI,OAAOC,QAAQL,KAAKM,KAAKF,OAAOC,UAChCF,cAAgBP,kBACvBQ,OAAOC,QAAQR,iCAA0BM,aAAeA,cAAgBP,iBACxEG,KAAOK,OAAOC,QAAQN,KAAKO,KAAKF,OAAOC,SACvCL,KAAOI,OAAOC,QAAQL,KAAKM,KAAKF,OAAOC,SACvCR,IAAMO,OAAOC,QAAQR,IAAIS,KAAKF,OAAOC,SACrCD,OAAOC,QAAQR,iCAA0BM,aAAeA,cAAgBP,iBACxEC,iCAA0BM,aAAeA,cAAgBP,mBAoE7DI,KAAMA,KACNC,MAAOA,MACPF,KAAMA,KACNF,IAAKA,IACLU,WA/De,CAACC,EAAGC,IACZD,EAAEE,QAAQ,QAASD,GA+D1BE,WAxDgBF,QACZG,EAAIH,EAAEI,MAAM,qCACND,EAAE,eAAMA,EAAE,gBAAOA,EAAE,SAuD7BE,WA3BgBC,aACG,IAAIC,WACAC,gBAAgBF,WAAY,aACpCG,gBAAgBC,YAyB/BC,cAhBmBC,MACT,IAAIL,WAAYC,gBAAgBI,IAAK,aACpCC,KAAKH,aAAe,GAe/BI,WAxCgBC,gBACVC,UAAYC,KAAKF,SACjBG,MAAQC,WAAWC,KAAKJ,WAAYb,GAAMA,EAAEkB,YAAY,YACvD,IAAIC,aAAcC,OAAOL,QAsChCM,YAjDgB,SAACzB,OAAG0B,2DAAM,WACnBC,KAAKC,UAAU5B,EAAE6B,MAAMH"}