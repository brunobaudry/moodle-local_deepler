{"version":3,"file":"deepler.min.js","sources":["../src/deepler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     local_deepler/deepler\n * @file       amd/src/deepler.js\n * @copyright  2022 Kaleb Heitzman <kaleb@jamfire.io>\n * @copyright  2024 Bruno Baudry <bruno.baudry@bfh.ch>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['./local/ui_deepler', 'core/log'], (UI, Log) => {\n    const debug = {\n        NONE: 0, // Level 5 silent.\n        MINIMAL: 5, // Level 3 no trace, debug or info.\n        NORMAL: 15, // Level 2 no trace or debug.\n        ALL: 30719, // Level 1 no trace.\n        DEVELOPER: 32767 // Level 0 all.\n    };\n    const init = (cfg) => {\n        const levelMap = {\n            [debug.NONE]: 5,\n            [debug.MINIMAL]: 3,\n            [debug.NORMAL]: 2,\n            [debug.ALL]: 1,\n            [debug.DEVELOPER]: 0\n        };\n        const level = levelMap[cfg.debug] ?? 5;\n        Log.setConfig({level});\n        Log.info(`09.04.2025 : 15:08 ` + cfg.version);\n\n        let activeRequests = 0;\n        let ajaxStopFired = false;\n\n        const onAjaxStop = ()=> {\n            // This runs only once when all AJAX requests are finished after a batch\n            const preloader = document.getElementById('local_deepler_preloaderModal');\n            if (preloader) {\n                preloader.classList.remove('show', 'd-block');\n                preloader.classList.add('d-none');\n            }\n            ajaxStopFired = true;\n        };\n\n        const originalOpen = XMLHttpRequest.prototype.open;\n        XMLHttpRequest.prototype.open = function(...args) {\n            activeRequests++;\n            ajaxStopFired = false; // New requests reset the flag\n            this.addEventListener('readystatechange', function() {\n                if (this.readyState === 4) { // Request completed\n                    activeRequests--;\n                    if (activeRequests === 0 && !ajaxStopFired) {\n onAjaxStop();\n}\n                }\n            }, false);\n            originalOpen.apply(this, args);\n        };\n\n\n        // Window.addEventListener(\"DOMContentLoaded\", UI.init(cfg));\n        window.addEventListener('load', UI.init(cfg));\n    };\n    return {\n        init: init\n    };\n});\n"],"names":["define","UI","Log","debug","init","cfg","level","setConfig","info","version","activeRequests","ajaxStopFired","onAjaxStop","preloader","document","getElementById","classList","remove","add","originalOpen","XMLHttpRequest","prototype","open","addEventListener","this","readyState","args","apply","window"],"mappings":";;;;;;;AAsBAA,+BAAO,CAAC,qBAAsB,aAAa,CAACC,GAAIC,aACtCC,WACI,EADJA,cAEO,EAFPA,aAGM,GAHNA,UAIG,MAJHA,gBAKS,YA8CR,CACHC,KA7CUC,oCAQJC,kCAPW,EACZH,YAAa,GACbA,eAAgB,GAChBA,cAAe,GACfA,WAAY,GACZA,iBAAkB,GAEAE,IAAIF,0DAAU,EACrCD,IAAIK,UAAU,CAACD,MAAAA,QACfJ,IAAIM,KAAK,sBAAwBH,IAAII,aAEjCC,eAAiB,EACjBC,eAAgB,QAEdC,WAAa,WAETC,UAAYC,SAASC,eAAe,gCACtCF,YACAA,UAAUG,UAAUC,OAAO,OAAQ,WACnCJ,UAAUG,UAAUE,IAAI,WAE5BP,eAAgB,GAGdQ,aAAeC,eAAeC,UAAUC,KAC9CF,eAAeC,UAAUC,KAAO,WAC5BZ,iBACAC,eAAgB,OACXY,iBAAiB,oBAAoB,WACd,IAApBC,KAAKC,aACLf,iBACuB,IAAnBA,gBAAyBC,eAChDC,iBAGc,iCAVqCc,6CAAAA,2BAWxCP,aAAaQ,MAAMH,KAAME,OAK7BE,OAAOL,iBAAiB,OAAQtB,GAAGG,KAAKC"}